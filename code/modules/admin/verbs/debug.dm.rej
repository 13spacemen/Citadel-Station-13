diff a/code/modules/admin/verbs/debug.dm b/code/modules/admin/verbs/debug.dm	(rejected hunks)
@@ -79,7 +79,7 @@ But you can call procs that are of type /mob/living/carbon/human/proc/ for that
 	. = get_callproc_returnval(returnval, procname)
 	if(.)
 		to_chat(usr, .)
-	feedback_add_details("admin_verb","Advanced ProcCall") //If you are copy-pasting this, ensure the 2nd parameter is unique to the new proc!
+	SSblackbox.add_details("admin_verb","Advanced ProcCall") //If you are copy-pasting this, ensure the 2nd parameter is unique to the new proc!
 
 /client/proc/callproc_datum(datum/A as null|area|mob|obj|turf)
 	set category = "Debug"
@@ -104,7 +104,7 @@ But you can call procs that are of type /mob/living/carbon/human/proc/ for that
 		return
 	log_admin("[key_name(src)] called [A]'s [procname]() with [lst.len ? "the arguments [list2params(lst)]":"no arguments"].")
 	message_admins("[key_name(src)] called [A]'s [procname]() with [lst.len ? "the arguments [list2params(lst)]":"no arguments"].")
-	feedback_add_details("admin_verb","Atom ProcCall") //If you are copy-pasting this, ensure the 2nd parameter is unique to the new proc!
+	SSblackbox.add_details("admin_verb","Atom ProcCall") //If you are copy-pasting this, ensure the 2nd parameter is unique to the new proc!
 
 	var/returnval = call(A,procname)(arglist(lst)) // Pass the lst as an argument list to the proc
 	. = get_callproc_returnval(returnval,procname)
@@ -758,7 +758,7 @@ But you can call procs that are of type /mob/living/carbon/human/proc/ for that
 	GLOB.medals_enabled = !GLOB.medals_enabled
 
 	message_admins("<span class='adminnotice'>[key_name_admin(src)] [GLOB.medals_enabled ? "disabled" : "enabled"] the medal hub lockout.</span>")
-	feedback_add_details("admin_verb","Toggle Medal Disable") // If...
+	SSblackbox.add_details("admin_verb","Toggle Medal Disable") // If...
 	log_admin("[key_name(src)] [GLOB.medals_enabled ? "disabled" : "enabled"] the medal hub lockout.")
 
 /client/proc/view_runtimes()
